// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 4.0.30319.1
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------
using UnityEngine;
using System.Collections;
using System.Collections.Generic;

namespace gamedata
{
	public class BulletData
	{
		public string 	prefab;
		public float 	rotation;
		public Vector2 	position;
		public Vector2 	velocity;
		public Vector2 	accelerate;

		public BulletData(LitJson.JsonData data)
		{
			prefab = data["prefab"].ToString();
			rotation = (float)data["rotation"];

			LitJson.JsonData jvalue = data["position"];
			position = new Vector2((float)jvalue[0], (float)jvalue[1]);

			jvalue = data["velocity"];
			velocity = new Vector2((float)jvalue[0], (float)jvalue[1]);

			jvalue = data["accelerate"];
			accelerate = new Vector2((float)jvalue[0], (float)jvalue[1]);
		}
	}

	public class BulletEmitter
	{
		public BulletData []items;

		public BulletEmitter(LitJson.JsonData data)
		{
			if(!data.IsArray)
			{
				Debug.LogError("BulletEmitter: array type needed, " + data.GetJsonType() + " was given");
				return;
			}

			items = new BulletData[data.Count];
			for(int i = 0; i < data.Count; ++i)
			{
				items[i] = new BulletData(data[i]);
			}
		}
	}

	public class BulletDataMgr
	{
		public Dictionary<int, BulletEmitter> bullets;

		public BulletDataMgr(LitJson.JsonData data)
		{
			bullets = new Dictionary<int, BulletEmitter>();

			if(!data.IsObject)
			{
				Debug.LogError("BulletDataMgr: object type needed.");
				return;
			}

			foreach(DictionaryEntry iter in data)
			{
				int key = int.Parse((string)iter.Key);
				BulletEmitter emitter = new BulletEmitter((LitJson.JsonData)iter.Value);

				bullets.Add(key, emitter);
			}
		}
	}
}

